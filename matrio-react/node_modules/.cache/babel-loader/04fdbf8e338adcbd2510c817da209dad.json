{"ast":null,"code":"var _jsxFileName = \"/Users/tonymullen/Dropbox/MatriO/repo/matrio-react/matrio/src/components/MatrioBoard.js\";\nimport React from 'react';\nimport { MatrixBoard } from '../components/MatrixBoard';\nimport { Hand } from '../components/Hand';\nexport class MatrioBoard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      dragging: 'null_null'\n    };\n    this.setDragging = this.setDragging.bind(this);\n  }\n\n  setDragging(card) {\n    this.setState({\n      dragging: card.name\n    });\n  }\n\n  render() {\n    // console.log(this.props);\n    // console.log(this.props.G);\n    const nextPlayerGo = () => {\n      console.log(\"Next player go after \" + this.props.ctx.currentPlayer);\n\n      if (this.props.ctx.currentPlayer != 3) {\n        this.props.step();\n      }\n    };\n\n    let winner = '';\n\n    if (this.props.ctx.gameover) {\n      winner = this.props.ctx.gameover.winner !== undefined ? React.createElement(\"div\", {\n        id: \"winner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Winner: \", this.props.ctx.gameover.winner) : React.createElement(\"div\", {\n        id: \"winner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Draw!\");\n    }\n\n    const cellStyle = {\n      width: '50px',\n      height: '50px',\n      paddingLeft: \"10px\",\n      paddingRight: \"10px\",\n      textAlign: 'center'\n    };\n    const tableStyle = {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderSpacing: '0'\n    };\n    const headerStyle = {\n      height: '50px'\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: headerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      style: tableStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      style: cellStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Hand, {\n      cards: this.props.G.playerCards[\"north\"],\n      player: \"north\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      style: cellStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80px\",\n        height: \"650px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        transform: \"rotate(90deg)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Hand, {\n      cards: this.props.G.playerCards[\"west\"],\n      player: \"west\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(MatrixBoard, {\n      step: this.props.step,\n      images: this.props.ctx.images,\n      G: this.props.G,\n      placeCard: this.props.moves.placeCard,\n      dragging: this.state.dragging,\n      next: nextPlayerGo,\n      end: this.props.events.endTurn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      style: cellStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80px\",\n        height: \"650px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        transformOrigin: 'center',\n        transform: \"rotate(90deg)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Hand, {\n      cards: this.props.G.playerCards[\"east\"],\n      player: \"east\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))))))), React.createElement(Hand, {\n      G: this.props.G,\n      cards: this.props.G.playerCards[\"south\"],\n      player: \"player\",\n      drag: this.setDragging,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n  } // onClick(id) {\n  //   this.props.moves.clickCell(id);\n  //   if (this.isActive(id)) {\n  //     this.props.moves.clickCell(id);\n  //     this.props.events.endTurn();\n  //   }\n  // }\n  // placeCard(card) {\n  //   this.props.moves.placeCard(card);\n  // }\n  // isActive(id) {\n  //   if (!this.props.isActive) return false;\n  //   if (this.props.G.prodMatrix[id] !== null) return false;\n  //   return true;\n  // }\n  // render() {\n  //   let winner = '';\n  //   if (this.props.ctx.gameover) {\n  //     winner = \n  //       this.props.ctx.gameover.winner !== undefined ? (\n  //         <div id=\"winner\">Winner: {this.props.ctx.gameover.winner}</div>\n  //       ) : (\n  //         <div id=\"winner\">Draw!</div>\n  //       );\n  //   }\n  //   const cellStyle = {\n  //     border: '1px solid #555',\n  //     width: '50px',\n  //     height: '50px',\n  //     lineHeight: '50px',\n  //     textAlign: 'center',\n  //   };\n  //   let tbody = [];\n  //   for (let i = 0; i < 3; i++) {\n  //     let cells = [];\n  //     for (let j = 0; j < 3; j++) {\n  //       const id = 3 * i + j;\n  //       cells.push(\n  //         <td style={cellStyle} key={id} onClick={() => this.onClick(id)}>\n  //           <img  width={90} src={images['queen_club']}\n  //            alt=\"card\"></img>\n  //           {this.props.G.prodMatrix[id]}\n  //         </td>\n  //       );\n  //     }\n  //     tbody.push(<tr key={i}>{cells}</tr>)\n  //   }\n  //   return (\n  //     <div>\n  //       <table id=\"board\">\n  //         <tbody>{tbody}</tbody>\n  //       </table>\n  //       {winner}\n  //     </div>\n  //   );\n  // }\n\n\n}","map":{"version":3,"sources":["/Users/tonymullen/Dropbox/MatriO/repo/matrio-react/matrio/src/components/MatrioBoard.js"],"names":["React","MatrixBoard","Hand","MatrioBoard","Component","constructor","state","dragging","setDragging","bind","card","setState","name","render","nextPlayerGo","console","log","props","ctx","currentPlayer","step","winner","gameover","undefined","cellStyle","width","height","paddingLeft","paddingRight","textAlign","tableStyle","marginLeft","marginRight","borderSpacing","headerStyle","G","playerCards","transform","images","moves","placeCard","events","endTurn","transformOrigin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MatrixBoard } from '../components/MatrixBoard'\nimport { Hand } from '../components/Hand'\n\nexport class MatrioBoard extends React.Component {\n    constructor() {\n      super()\n      this.state={dragging: 'null_null'}\n      this.setDragging = this.setDragging.bind(this)\n    }\n\n    setDragging(card) {\n      this.setState({dragging: card.name});\n    };\n\n    render() {\n      // console.log(this.props);\n      // console.log(this.props.G);\n      const nextPlayerGo = () => {\n        console.log(\"Next player go after \" +  this.props.ctx.currentPlayer)\n        if (this.props.ctx.currentPlayer != 3) {\n          this.props.step();\n        }\n      }\n\n      let winner = '';\n      if (this.props.ctx.gameover) {\n        winner = \n          this.props.ctx.gameover.winner !== undefined ? (\n            <div id=\"winner\">Winner: {this.props.ctx.gameover.winner}</div>\n          ) : (\n            <div id=\"winner\">Draw!</div>\n          );\n      }\n  \n      const cellStyle = {\n        width: '50px',\n        height: '50px',\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\",\n        textAlign: 'center',\n      };\n      const tableStyle = {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        borderSpacing : '0'\n        };\n      const headerStyle ={\n          height: '50px'\n      };\n      return (\n        <div>\n        <div style={headerStyle}></div>\n        <table style={tableStyle}>\n          <tbody>\n            <tr>\n              <td></td>\n              <td style={cellStyle}>     \n                    <Hand cards={this.props.G.playerCards[\"north\"]} player='north' />\n                </td>\n              <td></td>\n            </tr>\n            <tr>\n              <td style={cellStyle}>\n              <div style={{\n                      width: \"80px\",\n                      height: \"650px\",\n                  }} >\n                    <div style={{\n                        transform: `rotate(90deg)`\n                    }} >\n                    <Hand cards={this.props.G.playerCards[\"west\"]} player='west' />\n                    </div>\n                </div>\n                </td>\n              <td>\n              <MatrixBoard\n                step={this.props.step}\n                images={this.props.ctx.images} \n                G = {this.props.G}\n                placeCard={this.props.moves.placeCard}\n                dragging = {this.state.dragging}\n                next={nextPlayerGo}\n                end={this.props.events.endTurn}\n                />\n              </td>\n              <td style={cellStyle}>\n                <div style={{\n                      width: \"80px\",\n                      height: \"650px\",\n                  }} >\n                    <div style={{\n                        transformOrigin: 'center',\n                        transform: `rotate(90deg)`\n                    }} >\n                    <Hand cards={this.props.G.playerCards[\"east\"]} player='east' />\n                    </div>\n                </div>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n          <Hand G={this.props.G} cards={this.props.G.playerCards[\"south\"]} player='player' drag={this.setDragging} />\n        </div>\n      );\n    }\n  \n    // onClick(id) {\n    //   this.props.moves.clickCell(id);\n    //   if (this.isActive(id)) {\n    //     this.props.moves.clickCell(id);\n    //     this.props.events.endTurn();\n    //   }\n    // }\n  \n    // placeCard(card) {\n    //   this.props.moves.placeCard(card);\n    // }\n\n    // isActive(id) {\n    //   if (!this.props.isActive) return false;\n    //   if (this.props.G.prodMatrix[id] !== null) return false;\n    //   return true;\n    // }\n\n\n    // render() {\n    //   let winner = '';\n    //   if (this.props.ctx.gameover) {\n    //     winner = \n    //       this.props.ctx.gameover.winner !== undefined ? (\n    //         <div id=\"winner\">Winner: {this.props.ctx.gameover.winner}</div>\n    //       ) : (\n    //         <div id=\"winner\">Draw!</div>\n    //       );\n    //   }\n  \n    //   const cellStyle = {\n    //     border: '1px solid #555',\n    //     width: '50px',\n    //     height: '50px',\n    //     lineHeight: '50px',\n    //     textAlign: 'center',\n    //   };\n  \n    //   let tbody = [];\n    //   for (let i = 0; i < 3; i++) {\n    //     let cells = [];\n    //     for (let j = 0; j < 3; j++) {\n    //       const id = 3 * i + j;\n    //       cells.push(\n    //         <td style={cellStyle} key={id} onClick={() => this.onClick(id)}>\n    //           <img  width={90} src={images['queen_club']}\n    //            alt=\"card\"></img>\n    //           {this.props.G.prodMatrix[id]}\n    //         </td>\n    //       );\n    //     }\n    //     tbody.push(<tr key={i}>{cells}</tr>)\n    //   }\n  \n    //   return (\n    //     <div>\n    //       <table id=\"board\">\n    //         <tbody>{tbody}</tbody>\n    //       </table>\n    //       {winner}\n    //     </div>\n    //   );\n    // }\n  }"]},"metadata":{},"sourceType":"module"}