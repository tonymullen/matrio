{"ast":null,"code":"import { Card } from '../shared/Card';\nexport class DealerService {\n  constructor() {\n    this.suits = ['heart', 'diamond', 'spade', 'club'];\n    this.faces = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'jack', 'queen', 'king'];\n    this.jokers = [new Card('red', 'joker'), new Card('black', 'joker')];\n    this.deck = this.shuffle( // Generate deck from suits and faces\n    this.suits.map(s => this.faces.map(f => new Card(s, f))).reduce((accumulator, list) => accumulator.concat(list)).concat(this.jokers));\n  }\n\n  shuffle(array) {\n    let currentInd = array.length,\n        temp,\n        randInd;\n\n    while (0 !== currentInd) {\n      randInd = Math.floor(Math.random() * currentInd);\n      currentInd--;\n      temp = array[currentInd];\n      array[currentInd] = array[randInd];\n      array[randInd] = temp;\n    }\n\n    return array;\n  }\n\n}","map":{"version":3,"sources":["/Users/tonymullen/Dropbox/MatriO/repo/matrio-react/src/services/DealerService.js"],"names":["Card","DealerService","constructor","suits","faces","jokers","deck","shuffle","map","s","f","reduce","accumulator","list","concat","array","currentInd","length","temp","randInd","Math","floor","random"],"mappings":"AAAA,SAASA,IAAT,QAAqB,gBAArB;AAEA,OAAO,MAAMC,aAAN,CAAoB;AACvBC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAa,CAAC,OAAD,EAAU,SAAV,EAAqB,OAArB,EAA8B,MAA9B,CAAb;AACA,SAAKC,KAAL,GAAa,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,IAA/C,EAAqD,MAArD,EAA6D,OAA7D,EAAsE,MAAtE,CAAb;AACA,SAAKC,MAAL,GAAc,CAAC,IAAIL,IAAJ,CAAS,KAAT,EAAgB,OAAhB,CAAD,EAA2B,IAAIA,IAAJ,CAAS,OAAT,EAAkB,OAAlB,CAA3B,CAAd;AAEA,SAAKM,IAAL,GAAY,KAAKC,OAAL,EACR;AACG,SAAKJ,KAAL,CAAWK,GAAX,CAAeC,CAAC,IACf,KAAKL,KAAL,CAAWI,GAAX,CAAeE,CAAC,IACd,IAAIV,IAAJ,CAASS,CAAT,EAAYC,CAAZ,CADF,CADD,EAICC,MAJD,CAIQ,CAACC,WAAD,EAAcC,IAAd,KACPD,WAAW,CAACE,MAAZ,CAAmBD,IAAnB,CALD,EAMCC,MAND,CAMQ,KAAKT,MANb,CAFK,CAAZ;AAUH;;AAEDE,EAAAA,OAAO,CAACQ,KAAD,EAAS;AACZ,QAAIC,UAAU,GAAGD,KAAK,CAACE,MAAvB;AAAA,QAA+BC,IAA/B;AAAA,QAAqCC,OAArC;;AACA,WAAO,MAAMH,UAAb,EAAyB;AACvBG,MAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,UAA3B,CAAV;AACAA,MAAAA,UAAU;AACVE,MAAAA,IAAI,GAAGH,KAAK,CAACC,UAAD,CAAZ;AACAD,MAAAA,KAAK,CAACC,UAAD,CAAL,GAAoBD,KAAK,CAACI,OAAD,CAAzB;AACAJ,MAAAA,KAAK,CAACI,OAAD,CAAL,GAAiBD,IAAjB;AACD;;AACD,WAAOH,KAAP;AACD;;AA5BoB","sourcesContent":["import { Card } from '../shared/Card';\n\nexport class DealerService {\n    constructor() {\n        this.suits = ['heart', 'diamond', 'spade', 'club'];\n        this.faces = [ '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'jack', 'queen', 'king'];\n        this.jokers = [new Card('red', 'joker'), new Card('black', 'joker')]\n\n        this.deck = this.shuffle(\n            // Generate deck from suits and faces\n               this.suits.map(s => \n                this.faces.map(f => \n                  new Card(s, f)\n                )\n              ).reduce((accumulator, list) =>\n                accumulator.concat(list)\n              ).concat(this.jokers)\n            );\n    }\n\n    shuffle(array)  {\n        let currentInd = array.length, temp, randInd;\n        while (0 !== currentInd) {\n          randInd = Math.floor(Math.random() * currentInd);\n          currentInd--;\n          temp = array[currentInd];\n          array[currentInd] = array[randInd];\n          array[randInd] = temp;\n        }\n        return array;\n      }\n}"]},"metadata":{},"sourceType":"module"}